{% extends "base.html.twig" %}

{% set uploadURL = "/upload" %}

{# For inclusion in the base #}
{% block title %}Add New Bench{% endblock %}

{% block body %}

	{% if username is not null %}
		<h3>
			Welcome {{ provider|capitalize }} user {{ username }}
			{% if avatar is not null %}
				<img src="{{ avatar }}" width="20">
			{% endif %}
		</h3>
	{% endif %}
	{% if username is null %}
		<a href="/add/logged_in" class="button buttonColour">üë§ Sign in</a><br>or be <strong>anonymous</strong>.
	{% endif %}

<form id="fileform" action="{{ uploadURL }}" enctype="multipart/form-data" method="post" onsubmit="true;">
		<div>Select a photo of the bench's inscription and we'll try to auto-detect the text.<br>
		<div id="ios"></div>
		</div>

		<div id="photo1" class="photo-group">
			<div class="file_input_button">
				<div id="photoPreview1" style="display: none;"></div>
				<div id="upload-prompt1" class="upload-prompt">
					<span class="upload-copy">
						üì∑ Upload a geotagged photograph of the bench
						<br>
						<small>Please make sure the inscription is legible and well framed.</small>
					</span>
				</div>
				<input type="file" name="userfile1" id="photoFile1" accept="image/jpeg;capture=camera">
			</div>
			<div>
				<label for="media_type1">This photo is a:</label>
				<select name="media_type1" id="media_type1">
				{% set selected = "inscription" %}
				{% set media_types_array = media_types() %}
				{% for type in media_types_array %}
					{% if type.shortName == selected %}
					<option value="{{ type.shortName }}" selected="selected">{{ type.longName }}</option>
					{% else %}
					<option value="{{ type.shortName }}">{{ type.longName }}</option>
					{% endif %}
				{% endfor %}
				</select>
			</div>
		</div>


		<div id="inscriptionBox">
			<label for="inscription" id="message"></label><br>
			<textarea id="inscription" name="inscription" disabled cols="40" rows="6" placeholder="In loving memory of
Buffy Anne Summers
She saved the world.
A lot..." required></textarea>
		</div>
		<div id="tagInput">
		{% if tags_array is defined %}
				<h2>Choose some suitable tags:</h2>
				{% for tag in tags_array %}
				<label>
					<input type="checkbox" id="{{ tag }}" name="tags" value="{{ tag }}">
					<span class="toggle pseudo button">{{ tag }}</span>
				</label>
				{% endfor %}
		{% endif %}
		</div>
		<div id="map-hidden" style="clear:both;display: none;">
			<h3>Drag pin if you need to adjust the bench's location</h3>
			<div id="map"></div>
			{{ map_javascript("_add_") }}
		</div>
		<div id="latlong-hidden" style="clear:both;display: none;">
			<input type="text"   id="coordinates"                      value="" disabled>
			<input type="hidden" id="newLongitude" name="newLongitude" value="">
			<input type="hidden" id="newLatitude"  name="newLatitude"  value="">
		</div>&nbsp;
		<div id="photo2" class="photo-group" style="display: none;">
			<div class="file_input_button">
				<div id="photoPreview2" style="display: none;"></div>
				<div id="upload-prompt2" class="upload-prompt">
					<span class="upload-copy">
						üì∑ Optional photo of same bench
					</span>
				</div>
				<input type="file" name="userfile2" id="photoFile2" accept="image/jpeg;capture=camera">
			</div>
			<div>
				<label for="media_type2">This photo is a:</label>
				<select name="media_type2" id="media_type2">
				{% set selected = "bench" %}
				{% set media_types_array = media_types() %}
				{% for type in media_types_array %}
					{% if type.shortName == selected %}
					<option value="{{ type.shortName }}" selected="selected">{{ type.longName }}</option>
					{% else %}
					<option value="{{ type.shortName }}">{{ type.longName }}</option>
					{% endif %}
				{% endfor %}
				</select>	
			</div>
		</div>&nbsp;
		<div id="photo3" class="photo-group" style="display: none;">
			<div class="file_input_button">
				<div id="photoPreview3" style="display: none;"></div>
				<div id="upload-prompt3" class="upload-prompt">
					<span class="upload-copy">
						üì∑ Optional photo of same bench
					</span>
				</div>
				<input type="file" name="userfile3" id="photoFile3" accept="image/jpeg;capture=camera">
			</div>
			<div>
				<label for="media_type3">This photo is a:</label>
				<select name="media_type3" id="media_type3">
				{% set selected = "view" %}
				{% set media_types_array = media_types() %}
				{% for type in media_types_array %}
					{% if type.shortName == selected %}
					<option value="{{ type.shortName }}" selected="selected">{{ type.longName }}</option>
					{% else %}
					<option value="{{ type.shortName }}">{{ type.longName }}</option>
					{% endif %}
				{% endfor %}
				</select>	
			</div>
		</div>&nbsp;
		<div id="photo4" class="photo-group" style="display: none;">
			<div class="file_input_button">
				<div id="photoPreview4" style="display: none;"></div>
				<div id="upload-prompt4" class="upload-prompt">
					<span class="upload-copy">
						üì∑ Optional photo of same bench
					</span>
				</div>
				<input type="file" name="userfile4" id="photoFile4" accept="image/jpeg;capture=camera">
			</div>
			<div>
				<label for="media_type4">This photo is a:</label>
				<select name="media_type4" id="media_type4">
				{% set selected = "pano" %}
				{% set media_types_array = media_types() %}
				{% for type in media_types_array %}
					{% if type.shortName == selected %}
					<option value="{{ type.shortName }}" selected="selected">{{ type.longName }}</option>
					{% else %}
					<option value="{{ type.shortName }}">{{ type.longName }}</option>
					{% endif %}
				{% endfor %}
				</select>	
			</div>
		</div>&nbsp;
		<br>
		<div id="progressInfo" style="display:none;">
			<label for="progressBar">Upload progress:<br></label>
			<progress id="progressBar" value="0" max="100"></progress>
			<h3 id="status"></h3>
			<p id="loaded_n_total"></p>
		</div>
	</form>
	<div class="button-bar" id="buttonBar" style="display: none;">
		Please <a href="#inscriptionBox">check the inscription</a> before sharing.<br>
		<input class="button buttonColour" type="submit" name="submitButton" id="submitButton" value="üì∑ Share Bench">
	</div>
	<small id="cc-small">By adding a bench, you agree that you own the copyright of the photo and that you are making it freely available under the <a href="https://creativecommons.org/licenses/by-sa/4.0/">Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) license</a>.<br>
		This means other people can use the photo and its data without having to ask permission, but they will have to give <a href="https://creativecommons.org/licenses/by-sa/4.0/legalcode#s3">appropriate credit</a>. Thanks!<br>
		See our <a href="/blog/privacy/">privacy policy</a> to understand how your photo's data is used.
	</small>
	<script src="/js/jquery.3.6.4/jquery-3.6.4.min.js"></script>
	<script src="/js/vision/vision.js.php"></script>
	<script src="/js/JavaScript-Load-Image-5.16.0/js/load-image.all.min.js"></script>
	<script>
	$(document).ready(function() {
		if (/iPad|iPhone|iPod/.test(navigator.userAgent)) {
			$instructions = '<a href="https://www.openbenches.org/blog/2023/05/iphone-instructions/" target="_blank">‚û°Ô∏è Instructions for Apple devices ‚¨ÖÔ∏è</a>.';
			$('#ios').html($instructions);
		} 
	});
	</script>

	<script>
		var previewWidth = 800;

		document.getElementById("photoFile1").onchange = function (e) {
			var preview1 = document.getElementById("photoPreview1");
			//	If a photo was added already, remove it.
			while (preview1.hasChildNodes()) {
				preview1.removeChild(preview1.lastChild);
			}
			//	Display the element
			preview1.style.display = "block";
			//	Remove the upload text
			var u1 = document.getElementById("upload-prompt1");
			u1.style.display = "none";

			//	Add a quick canvas to the screen showing the image
			var loadingImage = loadImage(
				e.target.files[0],
				function (img) { preview1.appendChild(img); },
				{ maxWidth: previewWidth, canvas: true, orientation: true}
			);
			if (!loadingImage) {}
			$("#photo2").show();
			//	Check for GPS data
			// console.log('EXIF Check');
			var exifdata = loadImage.parseMetaData(
				e.target.files[0],
				function (data) {
					// console.log('Original image head: ', data.imageHead);
					// console.log('Exif data: ', data.exif);
					if (!data.imageHead) {
						return;
					}

					var gpsInfo = data.exif && data.exif.get('GPSInfo');
					// console.log(gpsInfo);

					if ( typeof gpsInfo == 'undefined' ) {
						alert("EXIF Warning! No GPS tags detected in photo.\nPlease check your camera's settings or add a different photo.");
						return;
					} else if ( gpsInfo.get("GPSLongitude") == null ) {
						alert("Warning! No GPS tags detected in photo.\nPlease check your camera's settings or add a different photo.");
						return;
					}
					// upload the photo for text detection
					uploadFiles(e);

					var exifLong    = gpsInfo.get("GPSLongitude");
					var exifLongRef = gpsInfo.get("GPSLongitudeRef");
					var exifLat     = gpsInfo.get("GPSLatitude");
					var exifLatRef  = gpsInfo.get("GPSLatitudeRef");

					//	Correct for negative values
					if (exifLatRef == "S") {
						var latitude = (exifLat[0]*-1) + (( (exifLat[1]*-60) + (exifLat[2]*-1) ) / 3600);
					} else {
						var latitude = exifLat[0] + (( (exifLat[1]*60) + exifLat[2] ) / 3600);
					}

					if (exifLongRef == "W") {
						var longitude = (exifLong[0]*-1) + (( (exifLong[1]*-60) + (exifLong[2]*-1) ) / 3600);											} else {
						var longitude = exifLong[0] + (( (exifLong[1]*60) + exifLong[2] ) / 3600);
					}

					if ( isNaN( latitude ) || isNaN( longitude ) ) {
						alert("Warning! There was an error reading the photo's GPS tags.\nPlease check your camera's settings or add a different photo.");
						return;
					}

					//	Show the map
					$("#map-hidden").show();
					$("#latlong-hidden").show();

					//	Add a draggable marker
					const marker = new maplibregl.Marker({draggable: true})
						.setLngLat( [longitude, latitude] )
						.addTo(map);

					// Centre the map
					map.jumpTo({
						center: [longitude.toFixed(7), latitude.toFixed(7)],
						zoom: 19,
					});

					//	Show the co-ordinates
					document.getElementById("coordinates").value  = latitude.toFixed(5) + ',' + longitude.toFixed(5);
					document.getElementById("newLongitude").value = longitude.toFixed(5);
					document.getElementById("newLatitude" ).value = latitude.toFixed(5);

					//	Update when marker is dragged
					function onDragEnd() {
						const lngLat = marker.getLngLat();
						document.getElementById("coordinates").value  = lngLat.lat.toFixed(5) + ',' + lngLat.lng.toFixed(5);
						document.getElementById("newLongitude").value = lngLat.lng;
						document.getElementById("newLatitude" ).value = lngLat.lat;
					}
					//	If the marker is dragged, update the coordinates
					marker.on('dragend', onDragEnd);
				}
			);
		};
		document.getElementById("photoFile2").onchange = function (e) {
			var preview2 = document.getElementById("photoPreview2");
			//	If a photo was added already, remove it.
			while (preview2.hasChildNodes()) {
				preview2.removeChild(preview2.lastChild);
			}
			//	Display the element
			preview2.style.display = "block";
			//	Remove the upload text
			var u2 = document.getElementById("upload-prompt2");
			u2.style.display = "none";
			//	Add a quick canvas to the screen showing the image
			var loadingImage = loadImage(
				e.target.files[0],
				function (img) { preview2.appendChild(img); },
				{ maxWidth: previewWidth, canvas: true, orientation: true}
			);
			if (!loadingImage) {}
			//	Show the next upload box
			document.getElementById("photo3").style.display = "block";
		}
		document.getElementById("photoFile3").onchange = function (e) {
			var preview3 = document.getElementById("photoPreview3");
			//	If a photo was added already, remove it.
			while (preview3.hasChildNodes()) {
				preview3.removeChild(preview3.lastChild);
			}
			//	Display the element
			preview3.style.display = "block";
			//	Remove the upload text
			var u3 = document.getElementById("upload-prompt3");
			u3.style.display = "none";
			//	Add a quick canvas to the screen showing the image
			var loadingImage = loadImage(
				e.target.files[0],
				function (img) { preview3.appendChild(img); },
				{ maxWidth: previewWidth, canvas: true, orientation: true}
			);
			if (!loadingImage) {}
			//	Show the next upload box
			document.getElementById("photo4").style.display = "block";
		}
		document.getElementById("photoFile4").onchange = function (e) {
			var preview4 = document.getElementById("photoPreview4");
			//	If a photo was added already, remove it.
			while (preview4.hasChildNodes()) {
				preview4.removeChild(preview4.lastChild);
			}
			//	Display the element
			preview4.style.display = "block";
			//	Remove the upload text
			var u4 = document.getElementById("upload-prompt4");
			u4.style.display = "none";
			//	Add a quick canvas to the screen showing the image
			var loadingImage = loadImage(
				e.target.files[0],
				function (img) { preview4.appendChild(img); },
				{ maxWidth: previewWidth, canvas: true, orientation: true}
			);
			if (!loadingImage) {}
		}
		//	Disable button once clicked & let user know that the media are being uploaded
		$("#submitButton").on('click', function() {
			if ( $("#inscription")[0].textLength > 0) {
				$("#submitButton").prop( "disabled", true );
				$("#submitButton").prop( "value",   "Uploading!" );
				uploadFile();
			}
			else {
				alert("OpenBenches is only for benches with a memorial inscription.");
			}
		});

		function uploadFile() {
			//	Show the progress bar
			$("#progressInfo").show();
			//	Prepare the data
			var formdata = new FormData();
			formdata.append("userfile1",    $("#photoFile1").prop('files')[0]);
			formdata.append("media_type1",  $("#media_type1").val());

			formdata.append("userfile2",    $("#photoFile2").prop('files')[0]);
			formdata.append("media_type2",  $("#media_type2").val());

			formdata.append("userfile3",    $("#photoFile3").prop('files')[0]);
			formdata.append("media_type3",  $("#media_type3").val());

			formdata.append("userfile4",    $("#photoFile4").prop('files')[0]);
			formdata.append("media_type4",  $("#media_type4").val());

			formdata.append("inscription",  $("#inscription").val());
			formdata.append("newLongitude", $("#newLongitude").val());
			formdata.append("newLatitude",  $("#newLatitude").val());

			formdata.append("tags",         $.map($("input[name='tags']:checked"), function(c){ return c.value; }).join());

			//	Send the file
			var ajax = new XMLHttpRequest();
			ajax.upload.addEventListener("progress", progressHandler);
			ajax.addEventListener("load",  completeHandler);
			ajax.addEventListener("error", errorHandler);
			ajax.addEventListener("abort", abortHandler);
			ajax.open("POST", "{{ uploadURL }}");
			ajax.send(formdata);
		}

		function progressHandler(event) {
			$("#loaded_n_total").html("Uploaded <output>" + event.loaded.toLocaleString() + " bytes of " + event.total.toLocaleString() + "</output>");
			var percent = (event.loaded / event.total) * 100;
			$("#progressBar").val(Math.round(percent));
			$("#status").html(Math.round(percent) + "% uploaded");

			if (100 == Math.round(percent)) {
				$("#status").html("Upload complete.");
			}
		}

		function completeHandler(event) {
			var reply = event.target.responseText;
			if (isNaN(reply)) {
				$("#status").html(reply);
			} else {
				$("#status").html("Redirecting you.");
				window.location.replace("/bench/"+reply);
			}
		}

		function errorHandler(event) {
			$("#status").html("Upload Failed");
		}

		function abortHandler(event) {
			$("#status").html("Upload Aborted");
		}
	</script>
{% endblock %}

