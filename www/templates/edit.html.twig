	{% extends "base.html.twig" %}

	{# For inclusion in the base #}
	{% block title %}Edit Bench{% endblock %}
	{% block longitude %}{{ longitude }}{% endblock %}
	{% block  latitude %}{{ latitude }}{% endblock %}

	{% block body %}
	<h3>
	Welcome {{ provider|capitalize }} user {{ username }}
	{% if avatar is not null %}
		<img src="{{ avatar }}" width="20" />
	{% endif %}
	</h3>
	<p>You can edit this bench's inscription, change location, or add more photos.</p>
	<form action="{{ uploadURL }}" enctype="multipart/form-data" method="post">
		
		<div style="clear:both;">
			<h3>Drag pin to change bench location, then press "Save Changes"</h3>
			<div id="map" ></div>
		</div>

		{#{ map_javascript("/api/bench/", benchID, latitude, longitude, 16, true ) }#}
		<script>
			const map = L.map('map', {sleepNote: false, sleepOpacity: 1})
			var Stadia_Outdoors = L.tileLayer('https://tiles-eu.stadiamaps.com/tiles/outdoors/{z}/{x}/{y}{r}.png', {
				minZoom: 2,
				maxNativeZoom: 19,
				maxZoom: 22,
				attribution: 'Map data © <a href="https://stadiamaps.com/">Stadia Maps</a>, © <a href="https://openmaptiles.org/">OpenMapTiles</a> © <a href="http://openstreetmap.org">OpenStreetMap</a> contributors',
				id: 'stadia.outdoors'
			});

			var OpenStreetMap_Mapnik = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
				minZoom: 2,
				maxNativeZoom: 19,
				maxZoom: 22,
				attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
				id: 'osm.mapnik'
			});

			var ESRI_Satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}.jpeg?token={{ app.request.server.get('ESRI_API_KEY') }}', {
				minZoom: 2,
				maxNativeZoom: 19,
				maxZoom: 22,
				attribution: '© <a href="https://www.esri.com/">i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community</a>',
				id: 'esri.satellite'
			});

			var Thunderforest = L.tileLayer('https://tile.thunderforest.com/outdoors/{z}/{x}/{y}.png?apikey={{ app.request.server.get('THUNDERFOREST_API_KEY') }}', {
				minZoom: 2,
				maxNativeZoom: 19,
				maxZoom: 22,
				attribution: '© <a href="https://www.thunderforest.com/">Thunderforest</a>',
				id: 'thunderforest'
			});

			map.setView([{{ latitude }},{{ longitude }}], 16);
			var baseMaps = {
				"Map View": Stadia_Outdoors,
				"Open Street Map": OpenStreetMap_Mapnik,
				"Satellite View": ESRI_Satellite,
				"Outdoors Map": Thunderforest
			};

			OpenStreetMap_Mapnik.addTo(map);

			L.control.layers(baseMaps, null, {collapsed:false}).addTo(map);
			let url = '/api/bench/{{ benchID }}';
			const response = fetch(url).then(response => response.json()).then(response => {
				var bench = response.features[0];
				var lat = bench.geometry.coordinates[1];
				var longt = bench.geometry.coordinates[0];
				var benchID = bench.id;

				//	Create the draggable marker
				marker = L.marker(new L.LatLng(lat, longt), {  benchID: benchID, draggable: true });
				
				//	What happens when it is dragged
				var coordinates = document.getElementById('coordinates');
				var longitude   = document.getElementById('newLongitude');
				var latitude    = document.getElementById('newLatitude');

				marker.on('dragend', function(event){
					newLat =  event.target._latlng.lat.toPrecision(7);
					newLong = event.target._latlng.lng.toPrecision(7);
					coordinates.value = newLat + ',' + newLong;
					longitude.value   = newLong;
					latitude.value    = newLat;
				});
			
				map.addLayer(marker);
			})
			
		</script>

		<div style="clear:both;">
			<input type="text"   id="coordinates"  value="{{ latitude }},{{ longitude }}" disabled="true" />
			<input type="hidden" id="newLongitude" name="newLongitude" value="{{ longitude }}"/>
			<input type="hidden" id="newLatitude"  name="newLatitude"  value="{{ latitude }}"/>
			<input type="hidden" id="benchID"      name="benchID"      value="{{ benchID }}"/>
		</div>&nbsp;

		<div>
			<label for="inscription">Change Inscription?</label><br>
			<textarea id="inscription" name="inscription" cols="40" rows="6">{{ inscription }}</textarea>
		</div>&nbsp;
		<script src="/js/jquery.3.6.4/jquery-3.6.4.min.js"></script>
		<script>
			$(document).ready(function() {
			});
		</script>		
		
		<div id="tagInput">
		{% if all_tags is defined %}
				<h2>Choose some tags</h2>
				{% for tag in all_tags %}
				<label>
					<input {% if tag in bench_tags %} checked {% endif %} type="checkbox" id="{{ tag }}" name="tags" value="{{ tag }}">
					<span class="toggle pseudo button">{{ tag }}</span>
				</label>
				{% endfor %}
		{% endif %}
		</div>
		<br>
		<div id='benchImage'>
			{% if medias is defined %}
				{% set media_types_array = media_types() %}
				{% for media in medias %}
				<div itemprop="photo" class="benchImage">
					<img src="{{ media.url }}"
						alt="{{ media.alt }}"
						width="{{ media.width}}"
						height="{{ media.height }}"
						class="proxy-image"
						loading="lazy" />

					<span class='caption'>
						{% if media.importURL is not null %}
						<a href="{{ media.importURL }}">
							<img src="/images/cc/{{ media.licenceIcon }}"
								class="cc-icon"
									alt="{{ media.licence }}"/>
						</a>
						{% else %}
						<a rel="license" href="https://creativecommons.org/licenses/by-sa/4.0/">
							<img src="/images/cc/{{ media.licenceIcon }}"
								class="cc-icon"
									alt="Creative Commons Attribution Share-Alike"/>
						</a>
						{% endif %}
						{{ media.formattedDate }}<br>
						{{ media.make }} {{ media.model }}
						{% if media.userName != "" %}
						<a href='/user/{{ media.userID }}'>℅ {{ media.userName }}</a>
						{% endif %}
					</span>
				</div>
				<select id="media_{{ media.mediaID }}" name="media_{{ media.mediaID }}">
				{% for type in media_types_array %}
					{% if type.shortName == media.mediaType %}
					<option value="{{ type.shortName }}" selected="selected">{{ type.longName }}</option>
					{% else %}
					<option value="{{ type.shortName }}">{{ type.longName }}</option>
					{% endif %}
				{% endfor %}
				</select><br><br>
				{% endfor %}
			{% endif %}
		</div>

		<h3>Add more images?</h3>
		<div id="ios"></div>
		<div id="photo1" class="photo-group">
			<div class="file_input_button">
				<div id="photoPreview1" style="display: none;"></div>
				<div id="upload-prompt1" class="upload-prompt">
					<span class="upload-copy">
						📷 Upload a geotagged photograph of the bench
						<br>
						<small>Please make sure the inscription is legible and well framed.</small>
					</span>
				</div>
				<input type="file" name="userfile1" id="photoFile1" accept="image/jpeg;capture=camera">
			</div>
			<div>
				<label for="media_type1">This photo is a:</label>
				{# TODO: Get these values from the database #}
				<select name="media_type1" id="media_type1">
					<option value="inscription" selected="">Close-up of the inscription</option>
					<option value="bench">Long shot of the bench</option>
					<option value="view">View from the bench</option>
					<option value="pano">Panoramic view</option>
					<option value="360">VR 360 panoramic </option>
					<option value="video">Video of the bench</option>
				</select>
			</div>
		</div>
		<div id="photo2" class="photo-group" style="display: none;">
			<div class="file_input_button">
				<div id="photoPreview2" style="display: none;"></div>
				<div id="upload-prompt2" class="upload-prompt">
					<span class="upload-copy">
						📷 Optional photo of same bench
					</span>
				</div>
				<input type="file" name="userfile2" id="photoFile2" accept="image/jpeg;capture=camera">
			</div>
			<div>
				<label for="media_type2">This photo is a:</label>
				{# TODO: Get these values from the database #}
				<select name="media_type1" id="media_type1">
					<option value="inscription" selected="">Close-up of the inscription</option>
					<option value="bench">Long shot of the bench</option>
					<option value="view">View from the bench</option>
					<option value="pano">Panoramic view</option>
					<option value="360">VR 360 panoramic </option>
					<option value="video">Video of the bench</option>
				</select>
			</div>
		</div>&nbsp;
		<div id="photo3" class="photo-group" style="display: none;">
			<div class="file_input_button">
				<div id="photoPreview3" style="display: none;"></div>
				<div id="upload-prompt3" class="upload-prompt">
					<span class="upload-copy">
						📷 Optional photo of same bench
					</span>
				</div>
				<input type="file" name="userfile3" id="photoFile3" accept="image/jpeg;capture=camera">
			</div>
			<div>
				<label for="media_type3">This photo is a:</label>
				{# TODO: Get these values from the database #}
				<select name="media_type1" id="media_type1">
					<option value="inscription" selected="">Close-up of the inscription</option>
					<option value="bench">Long shot of the bench</option>
					<option value="view">View from the bench</option>
					<option value="pano">Panoramic view</option>
					<option value="360">VR 360 panoramic </option>
					<option value="video">Video of the bench</option>
				</select>
			</div>
		</div>&nbsp;
		<div id="photo4" class="photo-group" style="display: none;">
			<div class="file_input_button">
				<div id="photoPreview4" style="display: none;"></div>
				<div id="upload-prompt4" class="upload-prompt">
					<span class="upload-copy">
						📷 Optional photo of same bench
					</span>
				</div>
				<input type="file" name="userfile4" id="photoFile4" accept="image/jpeg;capture=camera">
			</div>
			<div>
				<label for="media_type4">This photo is a:</label>
				{# TODO: Get these values from the database #}
				<select name="media_type1" id="media_type1">
					<option value="inscription" selected="">Close-up of the inscription</option>
					<option value="bench">Long shot of the bench</option>
					<option value="view" >View from the bench</option>
					<option value="pano" >Panoramic view</option>
					<option value="360"  >VR 360 panoramic</option>
					<option value="video">Video of the bench</option>
				</select>
			</div>
		</div>&nbsp;
		<br>
		{# Hardcoded for only @edent to be able to delete benches #}

		{% if admin == true %}
		<input type="checkbox" id="delete" name="delete">
		<label for="delete" class="checkable">⚠️ Delete this bench ⚠️</label>
		{% else %}
		<input type="hidden"   id="delete" name="delete">
		{% endif %}
		
		<br>&nbsp;
		<div class="button-bar">
			<input type="submit" name="submitButton" id="submitButton" class='button buttonColour' value="💾 Save Changes" />
		</div>
	</form>

	<script src="/js/JavaScript-Load-Image-5.16.0/js/load-image.all.min.js"></script>
	<script>
	$(document).ready(function() {
		if (/iPad|iPhone|iPod/.test(navigator.userAgent)) {
			$instructions = '<a href="https://www.openbenches.org/blog/2023/05/iphone-instructions/" target="_blank">➡️ Instructions for Apple devices ⬅️</a>.';
			$('#ios').html($instructions);
		} 
	});
	</script>
	<script type="text/javascript">
	var previewWidth = 800;

	document.getElementById('photoFile1').onchange = function (e) {
		var preview1 = document.getElementById("photoPreview1");
		//	If a photo was added already, remove it.
		while (preview1.hasChildNodes()) {
			preview1.removeChild(preview1.lastChild);
		}
		//	Display the element
		preview1.style.display = "block";
		//	Remove the upload text
		var u1 = document.getElementById("upload-prompt1");
		u1.style.display = "none";
		//	Add a quick canvas to the screen showing the image
		var loadingImage = loadImage(
			e.target.files[0],
			function (img) { preview1.appendChild(img); },
			{ maxWidth: previewWidth, canvas: true, orientation: true}
		);
		if (!loadingImage) {}
		document.getElementById('photo2').style.display = "block";
	};

	document.getElementById("photoFile2").onchange = function (e) {
		var preview2 = document.getElementById("photoPreview2");
		//	If a photo was added already, remove it.
		while (preview2.hasChildNodes()) {
			preview2.removeChild(preview2.lastChild);
		}
		//	Display the element
		preview2.style.display = "block";
		//	Remove the upload text
		var u2 = document.getElementById("upload-prompt2");
		u2.style.display = "none";
		//	Add a quick canvas to the screen showing the image
		var loadingImage = loadImage(
			e.target.files[0],
			function (img) { preview2.appendChild(img); },
			{ maxWidth: previewWidth, canvas: true, orientation: true}
		);
		if (!loadingImage) {}
		//	Show the next upload box
		document.getElementById('photo3').style.display = "block";
	}

	document.getElementById("photoFile3").onchange = function (e) {
		var preview3 = document.getElementById("photoPreview3");
		//	If a photo was added already, remove it.
		while (preview3.hasChildNodes()) {
			preview3.removeChild(preview3.lastChild);
		}
		//	Display the element
		preview3.style.display = "block";
		//	Remove the upload text
		var u3 = document.getElementById("upload-prompt3");
		u3.style.display = "none";
		//	Add a quick canvas to the screen showing the image
		var loadingImage = loadImage(
			e.target.files[0],
			function (img) { preview3.appendChild(img); },
			{ maxWidth: previewWidth, canvas: true, orientation: true}
		);
		if (!loadingImage) {}
		//	Show the next upload box
		document.getElementById('photo4').style.display = "block";
	}

	document.getElementById("photoFile4").onchange = function (e) {
		var preview4 = document.getElementById("photoPreview4");
		//	If a photo was added already, remove it.
		while (preview4.hasChildNodes()) {
			preview4.removeChild(preview4.lastChild);
		}
		//	Display the element
		preview4.style.display = "block";
		//	Remove the upload text
		var u4 = document.getElementById("upload-prompt4");
		u4.style.display = "none";
		//	Add a quick canvas to the screen showing the image
		var loadingImage = loadImage(
			e.target.files[0],
			function (img) { preview4.appendChild(img); },
			{ maxWidth: previewWidth, canvas: true, orientation: true}
		);
		if (!loadingImage) {}
	}

	//	Disable button once clicked & let user know that the media are being uploaded
		$("#submitButton").on('click', function() {
			if ( $("#inscription")[0].textLength > 0) {
				$("#submitButton").prop( "disabled", true );
				$("#submitButton").prop( "value",   "Uploading!" );
				uploadFile();
			}
			else {
				alert("OpenBenches is only for benches with a memorial inscription.");
			}
		});

		function uploadFile() {
			//	Show the progress bar
			$("#progressInfo").show();
			//	Prepare the data
			var formdata = new FormData();
			formdata.append("userfile1",    $("#photoFile1").prop('files')[0]);
			formdata.append("media_type1",  $("#media_type1").val());

			formdata.append("userfile2",    $("#photoFile2").prop('files')[0]);
			formdata.append("media_type2",  $("#media_type2").val());

			formdata.append("userfile3",    $("#photoFile3").prop('files')[0]);
			formdata.append("media_type3",  $("#media_type3").val());

			formdata.append("userfile4",    $("#photoFile4").prop('files')[0]);
			formdata.append("media_type4",  $("#media_type4").val());

			formdata.append("benchID",      $("#benchID").val());
			formdata.append("inscription",  $("#inscription").val());
			formdata.append("newLongitude", $("#newLongitude").val());
			formdata.append("newLatitude",  $("#newLatitude").val());

			formdata.append("tags",         $.map($("input[name='tags']:checked"), function(c){ return c.value; }).join());

			formdata.append("delete",       $("#delete").is(":checked"));

			{% if medias is defined %}
			{% for media in medias %}
			formdata.append("media_{{ media.mediaID }}",      $("#media_{{ media.mediaID }}").val());
			{% endfor %}
			{% endif %}

			//	Send the file
			var ajax = new XMLHttpRequest();
			ajax.upload.addEventListener("progress", progressHandler);
			ajax.addEventListener("load",  completeHandler);
			ajax.addEventListener("error", errorHandler);
			ajax.addEventListener("abort", abortHandler);
			ajax.open("POST", "{{ uploadURL }}");
			ajax.send(formdata);
		}

		function progressHandler(event) {
			$("#loaded_n_total").html("Uploaded <output>" + event.loaded.toLocaleString() + " bytes of " + event.total.toLocaleString() + "</output>");
			var percent = (event.loaded / event.total) * 100;
			$("#progressBar").val(Math.round(percent));
			$("#status").html(Math.round(percent) + "% uploaded");

			if (100 == Math.round(percent)) {
				$("#status").html("Upload complete. Redirecting you.");
			}
		}

		function completeHandler(event) {
			var reply = event.target.responseText;
			if (isNaN(reply)) {
				$("#status").html(reply);
			} else {
				$("#status").html("Redirecting you.");
				window.location.replace("/bench/"+reply);
			}
		}

		function errorHandler(event) {
			$("#status").html("Upload Failed");
		}

		function abortHandler(event) {
			$("#status").html("Upload Aborted");
		}
	</script>
	{% endblock %}

